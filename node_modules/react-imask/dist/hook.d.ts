import IMask from 'imask';
import type { MutableRefObject } from 'react';
import type { ReactMaskProps, MaskedElement, Falsy } from './mixin';
export default function useIMask<Opts extends IMask.AnyMaskedOptions = IMask.AnyMaskedOptions, Unmask extends ('typed' | boolean) = false, Value = Unmask extends 'typed' ? IMask.InputMask<Opts>['typedValue'] : Unmask extends Falsy ? IMask.InputMask<Opts>['value'] : IMask.InputMask<Opts>['unmaskedValue']>(opts: Opts, { onAccept, onComplete }?: Pick<ReactMaskProps<Opts, Unmask, Value>, 'onAccept' | 'onComplete'>): {
    ref: MutableRefObject<MaskedElement>;
    maskRef: MutableRefObject<IMask.InputMask<Opts>>;
};
